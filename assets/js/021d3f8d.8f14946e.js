"use strict";(self.webpackChunkbioinfotech=self.webpackChunkbioinfotech||[]).push([[945],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var d=a.createContext({}),c=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=c(e.components);return a.createElement(d.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=c(t),u=l,m=p["".concat(d,".").concat(u)]||p[u]||g[u]||i;return t?a.createElement(m,r(r({ref:n},s),{},{components:t})):a.createElement(m,r({ref:n},s))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,r=new Array(i);r[0]=u;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o[p]="string"==typeof e?e:l,r[1]=o;for(var c=2;c<i;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},118:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=t(7462),l=(t(7294),t(3905));const i={},r="\u4e0d\u77e5\u9053\u53d6\u4ec0\u4e48\u9898\u76ee",o={unversionedId:"\u8f6f\u4ef6\u4e0e\u8bed\u8a00\u6559\u7a0b/R\u8bed\u8a00\u4e13\u9879/\u753b\u56fe\u57fa\u672c\u64cd\u4f5c/\u4e0d\u77e5\u9053\u53d6\u4ec0\u4e48\u9898\u76ee",id:"\u8f6f\u4ef6\u4e0e\u8bed\u8a00\u6559\u7a0b/R\u8bed\u8a00\u4e13\u9879/\u753b\u56fe\u57fa\u672c\u64cd\u4f5c/\u4e0d\u77e5\u9053\u53d6\u4ec0\u4e48\u9898\u76ee",title:"\u4e0d\u77e5\u9053\u53d6\u4ec0\u4e48\u9898\u76ee",description:"\u4eff\u56fe",source:"@site/docs/03-\u8f6f\u4ef6\u4e0e\u8bed\u8a00\u6559\u7a0b/R\u8bed\u8a00\u4e13\u9879/\u753b\u56fe\u57fa\u672c\u64cd\u4f5c/\u4e0d\u77e5\u9053\u53d6\u4ec0\u4e48\u9898\u76ee.md",sourceDirName:"03-\u8f6f\u4ef6\u4e0e\u8bed\u8a00\u6559\u7a0b/R\u8bed\u8a00\u4e13\u9879/\u753b\u56fe\u57fa\u672c\u64cd\u4f5c",slug:"/\u8f6f\u4ef6\u4e0e\u8bed\u8a00\u6559\u7a0b/R\u8bed\u8a00\u4e13\u9879/\u753b\u56fe\u57fa\u672c\u64cd\u4f5c/\u4e0d\u77e5\u9053\u53d6\u4ec0\u4e48\u9898\u76ee",permalink:"/BioinfoTech/\u8f6f\u4ef6\u4e0e\u8bed\u8a00\u6559\u7a0b/R\u8bed\u8a00\u4e13\u9879/\u753b\u56fe\u57fa\u672c\u64cd\u4f5c/\u4e0d\u77e5\u9053\u53d6\u4ec0\u4e48\u9898\u76ee",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-\u8f6f\u4ef6\u4e0e\u8bed\u8a00\u6559\u7a0b/R\u8bed\u8a00\u4e13\u9879/\u753b\u56fe\u57fa\u672c\u64cd\u4f5c/\u4e0d\u77e5\u9053\u53d6\u4ec0\u4e48\u9898\u76ee.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u5982\u4f55\u53bb\u91cd",permalink:"/BioinfoTech/\u8f6f\u4ef6\u4e0e\u8bed\u8a00\u6559\u7a0b/R\u8bed\u8a00\u4e13\u9879/Dataframe\u57fa\u672c\u64cd\u4f5c/\u5982\u4f55\u53bb\u91cd"},next:{title:"Markdown \u8bed\u6cd5\u6559\u7a0b",permalink:"/BioinfoTech/\u8f6f\u4ef6\u4e0e\u8bed\u8a00\u6559\u7a0b/\u5199\u6587\u6863\u4e13\u9879/Markdown\u8bed\u6cd5\u6559\u7a0b"}},d={},c=[{value:"\u4eff\u56fe",id:"\u4eff\u56fe",level:2},{value:"\u6570\u636e\u683c\u5f0f",id:"\u6570\u636e\u683c\u5f0f",level:2},{value:"\u8981\u6c42",id:"\u8981\u6c42",level:2},{value:"\u5b9e\u73b0",id:"\u5b9e\u73b0",level:2},{value:"\u57fa\u672c\u8bbe\u7f6e",id:"\u57fa\u672c\u8bbe\u7f6e",level:3},{value:"\u6570\u636e\u8bfb\u53d6\u548c\u5904\u7406",id:"\u6570\u636e\u8bfb\u53d6\u548c\u5904\u7406",level:3},{value:"\u7ed8\u5236\u6298\u7ebf\u56fe",id:"\u7ed8\u5236\u6298\u7ebf\u56fe",level:3},{value:"\u7ed8\u5236\u76f4\u65b9\u56fe",id:"\u7ed8\u5236\u76f4\u65b9\u56fe",level:3},{value:"\u62fc\u56fe",id:"\u62fc\u56fe",level:3},{value:"\u6dfb\u52a0\u6807\u7b7e",id:"\u6dfb\u52a0\u6807\u7b7e",level:3},{value:"\u6548\u679c\u56fe",id:"\u6548\u679c\u56fe",level:3},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:2}],s={toc:c},p="wrapper";function g(e){let{components:n,...i}=e;return(0,l.kt)(p,(0,a.Z)({},s,i,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u4e0d\u77e5\u9053\u53d6\u4ec0\u4e48\u9898\u76ee"},"\u4e0d\u77e5\u9053\u53d6\u4ec0\u4e48\u9898\u76ee"),(0,l.kt)("h2",{id:"\u4eff\u56fe"},"\u4eff\u56fe"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image-20230518165217461",src:t(5590).Z,width:"1856",height:"712"})),(0,l.kt)("p",null,"\u5982\u4f55\u753b\u4e00\u4e2a\u8fd9\u6837\u7684\u56fe\uff1f"),(0,l.kt)("h2",{id:"\u6570\u636e\u683c\u5f0f"},"\u6570\u636e\u683c\u5f0f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"id  Label   case_conf\n1   0   0.106201172\n2   0   0.043518066\n3   1   0.200927734\n4   0   0.213378906\n5   0   0.057312012\n6   1   0.46484375\n7   1   0.579101563\n8   0   0.04019165\n9   0   0.082275391\n10  0   0.031143188\n")),(0,l.kt)("h2",{id:"\u8981\u6c42"},"\u8981\u6c42"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Label \u7684 0 \u548c 1 \u8868\u793a\u8282\u70b9\u7684\u826f\u6027/\u6076\u6027"),(0,l.kt)("li",{parentName:"ul"},"case_conf \u7684\u503c\u8868\u793a\u98ce\u9669\u7684\u9ad8\u4f4e\uff0c> 0.33 \u4e3a\u9ad8\u98ce\u9669")),(0,l.kt)("h2",{id:"\u5b9e\u73b0"},"\u5b9e\u73b0"),(0,l.kt)("p",null,"\u6b64\u56fe\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u5e26\u533a\u57df\u7684\u6298\u7ebf\u56fe"),(0,l.kt)("li",{parentName:"ul"},"\u4e24\u4e2a\u6761\u5e26"),(0,l.kt)("li",{parentName:"ul"},"\u6807\u7b7e")),(0,l.kt)("p",null,"\u6240\u4ee5\u53ef\u4ee5\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u753b\u4e09\u5f20\u56fe\u62fc\u5728\u4e00\u8d77\uff0c\u518d\u52a0\u4e0a\u6807\u7b7e"),(0,l.kt)("li",{parentName:"ul"},"\u6761\u5e26\u7528\u76f4\u65b9\u67f1\u7b49\u9ad8\u7684\u76f4\u65b9\u56fe\u5b9e\u73b0")),(0,l.kt)("h3",{id:"\u57fa\u672c\u8bbe\u7f6e"},"\u57fa\u672c\u8bbe\u7f6e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'library(ggplot2)\nlibrary(readxl)\nlibrary(cowplot)\nsetwd("D:/Mli/Project/")\n\nrm(list = ls())\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ggplot2")," \u753b\u56fe"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"readxl")," \u4ece excel \u8bfb\u53d6\u6587\u4ef6"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cowplot")," \u62fc\u56fe")),(0,l.kt)("h3",{id:"\u6570\u636e\u8bfb\u53d6\u548c\u5904\u7406"},"\u6570\u636e\u8bfb\u53d6\u548c\u5904\u7406"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'data <- read_xlsx("file.xlsx")\n# \u6309\u98ce\u9669\u964d\u5e8f\ndata <- data[order(data$case_conf, decreasing = T), ]\n# \u91cd\u7f6e x \u8f74 id \u987a\u5e8f\ndata$id <- 1:nrow(data)\n# \u6dfb\u52a0\u6807\u7b7e\u5217\ndata$risk_group <- cut(data$case_conf, breaks = c(0, 0.33, 10), labels = c("Low", "High"))\ndata$highgrade <- ifelse(data$Label == 1, "Yes", "No")\n')),(0,l.kt)("h3",{id:"\u7ed8\u5236\u6298\u7ebf\u56fe"},"\u7ed8\u5236\u6298\u7ebf\u56fe"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'# Predicted Risk Score \u6298\u7ebf\u56fe\np1 <- ggplot(data, aes(x = id, y = case_conf)) + \n  geom_area(fill = "#5E72E4", alpha = 0.5) + \n  geom_line(color = "#5E72E4", size = 0.1) + \n  theme_classic() + \n  scale_x_continuous(expand = c(0, 0)) + \n  scale_y_continuous(expand = c(0, 0)) + \n  labs(x = "", y = "Predicted Risk Score") + \n  geom_hline(yintercept = 0.33, linetype = "dotted", col = "red") + \n  geom_vline(xintercept = 330, linetype = "dotted", col = "red") +\n  annotate("text", x = 330, y = 0.33, label = "Predicted Risk Score > 0.33", vjust = -0.5)\n')),(0,l.kt)("h3",{id:"\u7ed8\u5236\u76f4\u65b9\u56fe"},"\u7ed8\u5236\u76f4\u65b9\u56fe"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'# Risk group \u76f4\u65b9\u56fe\np2 <- ggplot(data, aes(x = id, y = 1)) + \n  geom_bar(stat = "identity", aes(fill = risk_group), width = 1) + \n  theme_void() + \n  theme(legend.position = "none") +  \n  scale_x_continuous(expand = c(0, 0)) + \n  scale_y_continuous(expand = c(0, 0)) + \n  coord_cartesian(ylim = c(0, 1.5))\n\n# High-grade lesion \u76f4\u65b9\u56fe\np3 <- ggplot(data, aes(x = id, y = 1)) + \n  geom_bar(stat = "identity", aes(fill = highgrade), width = 1) + \n  theme_void() + \n  scale_fill_manual(values = c("#69b3a2", "#0053a8")) + \n  theme(legend.position = "none") +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_cartesian(ylim = c(0, 1.5))\n')),(0,l.kt)("h3",{id:"\u62fc\u56fe"},"\u62fc\u56fe"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'combined_plot <- plot_grid(p3, p2, p1, ncol = 1, align = "v", axis = "tb", rel_heights = c(1, 1, 10)) + facet_grid(scales = "free_x")\n')),(0,l.kt)("h3",{id:"\u6dfb\u52a0\u6807\u7b7e"},"\u6dfb\u52a0\u6807\u7b7e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'risk_legend <- get_legend(ggplot(data, aes(x = id, y = 1)) + \n                          geom_bar(stat = "identity", aes(fill = risk_group), width = 1) + \n                          labs(fill = "Risk group"))\nhighgrade_legend <- get_legend(ggplot(data, aes(x = id, y = 1)) + \n                               geom_bar(stat = "identity", aes(fill = highgrade), width = 1) + \n                               scale_fill_manual(values = c("#69b3a2", "#0053a8")) + \n                               labs(fill = "High-grade lesion"))\n\ncombined_plot + \n  draw_plot(highgrade_legend, .55, .45, .5, .5) + \n  draw_plot(risk_legend, .7, .45, .5, .5)\n')),(0,l.kt)("h3",{id:"\u6548\u679c\u56fe"},"\u6548\u679c\u56fe"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image-20230519123046842",src:t(8715).Z,width:"961",height:"519"})),(0,l.kt)("h2",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r",metastring:'title="plot.R"',title:'"plot.R"'},'library(ggplot2)\nlibrary(readxl)\nlibrary(cowplot)\nsetwd("D:/Mli/Project/")\n\nrm(list = ls())\n\ndata <- read_xlsx("file.xlsx")\n\ndata <- data[order(data$case_conf, decreasing = T), ]\ndata$id <- 1:nrow(data)\ndata$risk_group <- cut(data$case_conf, breaks = c(0, 0.33, 10), labels = c("Low", "High"))\ndata$highgrade <- ifelse(data$Label == 1, "Yes", "No")\n\n# Predicted Risk Score \u6298\u7ebf\u56fe\np1 <- ggplot(data, aes(x = id, y = case_conf)) + \n  geom_area(fill = "#5E72E4", alpha = 0.5) + \n  geom_line(color = "#5E72E4", size = 0.1) + \n  theme_classic() + \n  scale_x_continuous(expand = c(0, 0)) + \n  scale_y_continuous(expand = c(0, 0)) + \n  labs(x = "", y = "Predicted Risk Score") + \n  geom_hline(yintercept = 0.33, linetype = "dotted", col = "red") + \n  geom_vline(xintercept = 330, linetype = "dotted", col = "red") +\n  annotate("text", x = 330, y = 0.33, label = "Predicted Risk Score > 0.33", vjust = -0.5)\n\n# Risk group \u76f4\u65b9\u56fe\np2 <- ggplot(data, aes(x = id, y = 1)) + \n  geom_bar(stat = "identity", aes(fill = risk_group), width = 1) + \n  theme_void() + \n  theme(legend.position = "none") +  \n  scale_x_continuous(expand = c(0, 0)) + \n  scale_y_continuous(expand = c(0, 0)) + \n  coord_cartesian(ylim = c(0, 1.5))\n\n# High-grade lesion \u76f4\u65b9\u56fe\np3 <- ggplot(data, aes(x = id, y = 1)) + \n  geom_bar(stat = "identity", aes(fill = highgrade), width = 1) + \n  theme_void() + \n  scale_fill_manual(values = c("#69b3a2", "#0053a8")) + \n  theme(legend.position = "none") +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  coord_cartesian(ylim = c(0, 1.5))\n\ncombined_plot <- plot_grid(p3, p2, p1, ncol = 1, align = "v", axis = "tb", rel_heights = c(1, 1, 10)) + facet_grid(scales = "free_x")\n\nrisk_legend <- get_legend(ggplot(data, aes(x = id, y = 1)) + \n                          geom_bar(stat = "identity", aes(fill = risk_group), width = 1) + \n                          labs(fill = "Risk group"))\nhighgrade_legend <- get_legend(ggplot(data, aes(x = id, y = 1)) + \n                               geom_bar(stat = "identity", aes(fill = highgrade), width = 1) + \n                               scale_fill_manual(values = c("#69b3a2", "#0053a8")) + \n                               labs(fill = "High-grade lesion"))\n\ncombined_plot + \n  draw_plot(highgrade_legend, .55, .45, .5, .5) + \n  draw_plot(risk_legend, .7, .45, .5, .5)\n\n')))}g.isMDXComponent=!0},5590:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-20230518165217461-0b88aab602b8dcdca77477562b15dbaf.png"},8715:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-20230519123046842-4c4ae72963f1be7ada990cb98a996a90.png"}}]);